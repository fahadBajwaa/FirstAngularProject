//  ----------------------  ðŸŸ¢  Project/ Folder Structure   ðŸŸ¢  ---------------------- 


1. Project Name: 'my-firstangular-project"  â€‹ðŸŸ¥

This is the main folder of my project. Everything related to my Angular app is inside this folder.


2. System/Config Folders:  ( .angular/, .vscode/, .node_modules/ )  â€‹ðŸŸ¥

We don't edit these usually.

-> .angular/: Internal Angular info for the CLI, like build/cache settings. - " When we run  [ ng serve ] command.
-> .vscode/: Editor-specific settings (used by VS code).
-> .node_modules/: This folder contain all the libraries, app depends on.


3. Public/ : (from Angular 18) â€‹ðŸŸ¥

This folder is used to store all public assets like images and icons. 
The public/ folder is designated for storing static files that your application needs to serve directly to the browser without any processing by Angular. This includes:â€‹
Images: Logos, icons, and other graphics.
Fonts: Custom font files.
Documents: PDFs or other downloadable files.
Other Static Assets: Any files that don't require Angular's compilation or bundling.

During the build process, Angular copies the contents of the public/ folder directly into the root of the output directory (dist/). 
This means the files are accessible at the root level of the deployed application.â€‹

Angular's build configuration (angular.json) includes an assets array that specifies which files and folders should be copied as-is to the output directory. 
With Angular 18, this configuration looks like:â€‹

"assets": [
  {
    "glob": "**/*",
    "input": "public"
  }
]
This tells Angular to include all files from the public/ folder in the build output.â€‹


4.  src/ folder: â€‹ðŸŸ¥